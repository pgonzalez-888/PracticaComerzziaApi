/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Entidad que representa una promoción aplicable a un artículo
 */
@ApiModel(description = "Entidad que representa una promoción aplicable a un artículo")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-25T13:28:09.707+02:00[Europe/Paris]")
public class PromocionEntity {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPCION = "descripcion";
  @SerializedName(SERIALIZED_NAME_DESCRIPCION)
  private String descripcion;

  public static final String SERIALIZED_NAME_FECHA_ALTA = "fechaAlta";
  @SerializedName(SERIALIZED_NAME_FECHA_ALTA)
  private LocalDate fechaAlta;

  public static final String SERIALIZED_NAME_FECHA_INICIO = "fechaInicio";
  @SerializedName(SERIALIZED_NAME_FECHA_INICIO)
  private LocalDate fechaInicio;

  public static final String SERIALIZED_NAME_FECHA_FIN = "fechaFin";
  @SerializedName(SERIALIZED_NAME_FECHA_FIN)
  private LocalDate fechaFin;

  public static final String SERIALIZED_NAME_CODIGO_ARTICULO = "codigoArticulo";
  @SerializedName(SERIALIZED_NAME_CODIGO_ARTICULO)
  private String codigoArticulo;

  /**
   * Tipo de promoción (PRECIO o DESCUENTO)
   */
  @JsonAdapter(TipoEnum.Adapter.class)
  public enum TipoEnum {
    PRECIO("PRECIO"),
    
    DESCUENTO("DESCUENTO");

    private String value;

    TipoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TipoEnum fromValue(String value) {
      for (TipoEnum b : TipoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TipoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TipoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TipoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TipoEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TIPO = "tipo";
  @SerializedName(SERIALIZED_NAME_TIPO)
  private TipoEnum tipo;

  public static final String SERIALIZED_NAME_PRECIO_PROMOCION = "precioPromocion";
  @SerializedName(SERIALIZED_NAME_PRECIO_PROMOCION)
  private BigDecimal precioPromocion;

  public static final String SERIALIZED_NAME_PORCENTAJE_DESCUENTO = "porcentajeDescuento";
  @SerializedName(SERIALIZED_NAME_PORCENTAJE_DESCUENTO)
  private BigDecimal porcentajeDescuento;

  public PromocionEntity() { 
  }

  public PromocionEntity id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID único de la promoción
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "PROMO2024", required = true, value = "ID único de la promoción")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public PromocionEntity descripcion(String descripcion) {
    
    this.descripcion = descripcion;
    return this;
  }

   /**
   * Descripción de la promoción
   * @return descripcion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20% de descuento en el producto A", value = "Descripción de la promoción")

  public String getDescripcion() {
    return descripcion;
  }


  public void setDescripcion(String descripcion) {
    this.descripcion = descripcion;
  }


  public PromocionEntity fechaAlta(LocalDate fechaAlta) {
    
    this.fechaAlta = fechaAlta;
    return this;
  }

   /**
   * Fecha de alta de la promoción
   * @return fechaAlta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Mon Apr 01 02:00:00 CEST 2024", value = "Fecha de alta de la promoción")

  public LocalDate getFechaAlta() {
    return fechaAlta;
  }


  public void setFechaAlta(LocalDate fechaAlta) {
    this.fechaAlta = fechaAlta;
  }


  public PromocionEntity fechaInicio(LocalDate fechaInicio) {
    
    this.fechaInicio = fechaInicio;
    return this;
  }

   /**
   * Fecha de inicio de la promoción
   * @return fechaInicio
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Mon Apr 15 02:00:00 CEST 2024", required = true, value = "Fecha de inicio de la promoción")

  public LocalDate getFechaInicio() {
    return fechaInicio;
  }


  public void setFechaInicio(LocalDate fechaInicio) {
    this.fechaInicio = fechaInicio;
  }


  public PromocionEntity fechaFin(LocalDate fechaFin) {
    
    this.fechaFin = fechaFin;
    return this;
  }

   /**
   * Fecha de finalización de la promoción
   * @return fechaFin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Wed May 15 02:00:00 CEST 2024", required = true, value = "Fecha de finalización de la promoción")

  public LocalDate getFechaFin() {
    return fechaFin;
  }


  public void setFechaFin(LocalDate fechaFin) {
    this.fechaFin = fechaFin;
  }


  public PromocionEntity codigoArticulo(String codigoArticulo) {
    
    this.codigoArticulo = codigoArticulo;
    return this;
  }

   /**
   * Código del artículo al que se aplica la promoción
   * @return codigoArticulo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "A12345", required = true, value = "Código del artículo al que se aplica la promoción")

  public String getCodigoArticulo() {
    return codigoArticulo;
  }


  public void setCodigoArticulo(String codigoArticulo) {
    this.codigoArticulo = codigoArticulo;
  }


  public PromocionEntity tipo(TipoEnum tipo) {
    
    this.tipo = tipo;
    return this;
  }

   /**
   * Tipo de promoción (PRECIO o DESCUENTO)
   * @return tipo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "DESCUENTO", required = true, value = "Tipo de promoción (PRECIO o DESCUENTO)")

  public TipoEnum getTipo() {
    return tipo;
  }


  public void setTipo(TipoEnum tipo) {
    this.tipo = tipo;
  }


  public PromocionEntity precioPromocion(BigDecimal precioPromocion) {
    
    this.precioPromocion = precioPromocion;
    return this;
  }

   /**
   * Nuevo precio promocional (solo si el tipo es PRECIO)
   * @return precioPromocion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5.99", value = "Nuevo precio promocional (solo si el tipo es PRECIO)")

  public BigDecimal getPrecioPromocion() {
    return precioPromocion;
  }


  public void setPrecioPromocion(BigDecimal precioPromocion) {
    this.precioPromocion = precioPromocion;
  }


  public PromocionEntity porcentajeDescuento(BigDecimal porcentajeDescuento) {
    
    this.porcentajeDescuento = porcentajeDescuento;
    return this;
  }

   /**
   * Porcentaje de descuento (solo si el tipo es DESCUENTO)
   * @return porcentajeDescuento
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20", value = "Porcentaje de descuento (solo si el tipo es DESCUENTO)")

  public BigDecimal getPorcentajeDescuento() {
    return porcentajeDescuento;
  }


  public void setPorcentajeDescuento(BigDecimal porcentajeDescuento) {
    this.porcentajeDescuento = porcentajeDescuento;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromocionEntity promocionEntity = (PromocionEntity) o;
    return Objects.equals(this.id, promocionEntity.id) &&
        Objects.equals(this.descripcion, promocionEntity.descripcion) &&
        Objects.equals(this.fechaAlta, promocionEntity.fechaAlta) &&
        Objects.equals(this.fechaInicio, promocionEntity.fechaInicio) &&
        Objects.equals(this.fechaFin, promocionEntity.fechaFin) &&
        Objects.equals(this.codigoArticulo, promocionEntity.codigoArticulo) &&
        Objects.equals(this.tipo, promocionEntity.tipo) &&
        Objects.equals(this.precioPromocion, promocionEntity.precioPromocion) &&
        Objects.equals(this.porcentajeDescuento, promocionEntity.porcentajeDescuento);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, descripcion, fechaAlta, fechaInicio, fechaFin, codigoArticulo, tipo, precioPromocion, porcentajeDescuento);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromocionEntity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    descripcion: ").append(toIndentedString(descripcion)).append("\n");
    sb.append("    fechaAlta: ").append(toIndentedString(fechaAlta)).append("\n");
    sb.append("    fechaInicio: ").append(toIndentedString(fechaInicio)).append("\n");
    sb.append("    fechaFin: ").append(toIndentedString(fechaFin)).append("\n");
    sb.append("    codigoArticulo: ").append(toIndentedString(codigoArticulo)).append("\n");
    sb.append("    tipo: ").append(toIndentedString(tipo)).append("\n");
    sb.append("    precioPromocion: ").append(toIndentedString(precioPromocion)).append("\n");
    sb.append("    porcentajeDescuento: ").append(toIndentedString(porcentajeDescuento)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("descripcion");
    openapiFields.add("fechaAlta");
    openapiFields.add("fechaInicio");
    openapiFields.add("fechaFin");
    openapiFields.add("codigoArticulo");
    openapiFields.add("tipo");
    openapiFields.add("precioPromocion");
    openapiFields.add("porcentajeDescuento");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("fechaInicio");
    openapiRequiredFields.add("fechaFin");
    openapiRequiredFields.add("codigoArticulo");
    openapiRequiredFields.add("tipo");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PromocionEntity
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (PromocionEntity.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in PromocionEntity is not found in the empty JSON string", PromocionEntity.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PromocionEntity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PromocionEntity` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PromocionEntity.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("descripcion") != null && !jsonObj.get("descripcion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `descripcion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descripcion").toString()));
      }
      if (jsonObj.get("codigoArticulo") != null && !jsonObj.get("codigoArticulo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codigoArticulo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codigoArticulo").toString()));
      }
      if (jsonObj.get("tipo") != null && !jsonObj.get("tipo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tipo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tipo").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PromocionEntity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PromocionEntity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PromocionEntity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PromocionEntity.class));

       return (TypeAdapter<T>) new TypeAdapter<PromocionEntity>() {
           @Override
           public void write(JsonWriter out, PromocionEntity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PromocionEntity read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PromocionEntity given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PromocionEntity
  * @throws IOException if the JSON string is invalid with respect to PromocionEntity
  */
  public static PromocionEntity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PromocionEntity.class);
  }

 /**
  * Convert an instance of PromocionEntity to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

